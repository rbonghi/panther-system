#!/bin/bash
# Copyright (C) 2020, Raffaello Bonghi <raffaello@rnext.it>
# All rights reserved
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright 
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its 
#    contributors may be used to endorse or promote products derived 
#    from this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
# CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, 
# BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
# OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
# EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

bold=`tput bold`
red=`tput setaf 1`
green=`tput setaf 2`
reset=`tput sgr0`

# Catkin main package
ROS_WS_NAME=$PANTHER_WS

update()
{
    local rosinstall=$1
    local THIS="$(pwd)"
    local path="$HOME/$ROS_WS_NAME"
    # Merge if there are update of repositories
    wstool merge -t "$path/src" $rosinstall
    # Update workspace
    wstool update -t "$path/src"
    # Status update wstool
    if [ $? -ne 0 ] ; then
        # Try to make again
        echo "${red}Please check  workspace status ${reset}"
        exit 1
    fi
    # Install all dependencies
    # http://wiki.ros.org/rosdep
    rosdep install --from-paths "$path/src" --ignore-src -r -y
    # Go to catkin path
    cd $path
    # Catkin make all workspace
    catkin_make
    # Return to main path
    cd $THIS
}

usage()
{
	if [ "$1" != "" ]; then
		echo "${red}$1${reset}"
	fi
	
    echo "updater. Update workspace, repositories and dependencies"
    echo "Usage:"
    echo "$0 [options]"
    echo "options,"
    echo "   -h|--help        | This help"
    echo "   -f|--file [FILE] | File to read"
}

main()
{
    local rosinstall_file=""
	# Decode all information from startup
    while [ -n "$1" ]; do
        case "$1" in
            -h|--help) # Load help
                usage
                exit 0
                ;;
            -f|--file)
                rosinstall_file=$2
                shift 1
                ;;
            *)
                usage "[ERROR] Unknown option: $1"
                exit 1
                ;;
        esac
            shift 1
    done

	# Check if run in sudo
    if [[ `id -u` -eq 0 ]] ; then 
        echo "${red}Please don't run as root${reset}"
        exit 1
    fi
    
    if [ -z "$ROS_WS_NAME" ] ; then
        echo "${red}Doesn't load Panther ROS variables!${reset}"
        exit 1
    fi
    
    # Check if rosinstall file is not empty
    if [ ! -z $rosinstall_file ] ; then
        rosinstall_uri=$rosinstall_file
    # Extract rosinstall uri
    elif [ "$PANTHER_TYPE" = "sim" ] ; then
        rosinstall_uri="https://raw.githubusercontent.com/rpanther/panther_simulation/master/simulation.rosinstall"
    elif [ "$PANTHER_TYPE" = "robot" ] ; then
        rosinstall_uri="https://raw.githubusercontent.com/rpanther/panther_robot/master/robot.rosinstall"
    else
        usage "[ERROR] Unknown config: $PANTHER_TYPE"
        exit 1
    fi

    # Run update function    
    update $rosinstall_uri
}

main $@
exit 0

# EOF

